name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 安装 Homebrew 并使用 brew 安装 pyenv (macOS 平台)
      - name: Install Homebrew and pyenv on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          # 安装 Homebrew，如果不存在
          if ! command -v brew &> /dev/null; then
            echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> $HOME/.bash_profile
            eval "$(/opt/homebrew/bin/brew shellenv)"
          else
            echo "Homebrew is already installed."
            eval "$(/opt/homebrew/bin/brew shellenv)"
          fi
          brew update
          brew install pyenv
          brew install pyenv-virtualenv
          pyenv install 3.12.0
          pyenv global 3.12.0

      # 手动配置 pyenv 环境变量
      - name: Configure pyenv environment on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          echo "PYENV_ROOT=$HOME/.pyenv" >> $GITHUB_ENV
          echo "$HOME/.pyenv/shims:/usr/local/bin:$PATH" >> $GITHUB_ENV
          echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> $GITHUB_ENV
          echo 'export PATH="$PYENV_ROOT/shims:$PATH"' >> $GITHUB_ENV

      # 安装 Python 环境，针对 Windows 的设置
      - name: Setup Python (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # 安装 Python 开发环境和依赖 (Ubuntu 平台)
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf python3-dev

      - name: Install pnpm
        run: npm install -g pnpm

      # 安装 LLVM
      - name: Install LLVM on Ubuntu
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm

      - name: Install LLVM on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          brew install llvm
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> $GITHUB_ENV
          source ~/.bash_profile

      - name: Install LLVM on Windows
        if: matrix.platform == 'windows-latest'
        run: |
          choco install llvm

      # 安装前端依赖
      - name: install frontend dependencies
        run: pnpm install # change this to npm, pnpm or bun depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces __VERSION__ with the app version.
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
