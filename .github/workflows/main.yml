name: 'publish'

on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
      
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            python_version: '3.12'
         

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      # 安装 Rust 稳定版
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # 设置 Python 环境
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }} # 使用在矩阵中定义的 Python 版本

      # 安装 Ubuntu 上的依赖项（仅限 Ubuntu 平台）
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # 安装 pnpm
      - name: Install pnpm
        run: npm install -g pnpm

      # 安装 LLVM
      - name: Install LLVM on Ubuntu
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm
      - name: Install LLVM on macOS
        if: matrix.platform == 'macos-latest'
        run: |
           brew install llvm
           echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> ~/.bash_profile
           source ~/.bash_profile
      - name: Install LLVM on Windows
        if: matrix.platform == 'windows-latest'
        run: |
          choco install llvm

      # 安装前端依赖
      - name: install frontend dependencies
        run: pnpm install
    

      - name: Add Cargo config
        run: |
          mkdir -p .cargo  # 确保 .cargo 目录存在
          cat <<EOF >> .cargo/config.toml
          [target.x86_64-apple-darwin]
          rustflags = [
            "-C", "link-arg=-undefined",
            "-C", "link-arg=dynamic_lookup",
          ]

          EOF
          echo "Cargo config added."
          
          

      # 使用 tauri 构建
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
